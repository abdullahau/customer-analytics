---
title: Customer-Based Corporate Valuation for Subscription-Based Businesses
author: Abdullah Mahmood
date: last-modified
format:
    html:
        theme: cosmo
        css: quarto-style/style.css        
        highlight-style: atom-one        
        mainfont: Palatino
        fontcolor: black
        monobackgroundcolor: white
        monofont: Menlo, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace
        fontsize: 13pt
        linestretch: 1.4
        number-sections: true
        number-depth: 5
        toc: true
        toc-location: right
        toc-depth: 5
        code-fold: true
        code-copy: true
        cap-location: bottom
        format-links: false
        embed-resources: true
        anchor-sections: true
        code-links:   
        -   text: GitHub Repo
            icon: github
            href: https://github.com/abdullahau/customer-analytics/
        -   text: Quarto Markdown
            icon: file-code
            href: https://github.com/abdullahau/customer-analytics/blob/main/buyer-behavior-summary-transaction-log.qmd
        html-math-method:
            method: mathjax
            url: https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js
---

This model presented in this notebook is a direct implementation of *Daniel M. McCarthy, Peter S. Fader and Bruce G. S. Hardie*'s 2016 paper [*Valuing Subscription-Based Businesses Using Publicly Disclosed Customer Data*](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2701093)

## Introduction

The relevance and popularity of subscription-based businesses—businesses whose customers pay a periodically recurring fee for access to a product or service—has grown considerably in recent years. Previously dominated by newspapers, magazines, and telecommunications companies, the subscription-based business model has made strong inroads into consumer software (Microsoft 365), food preparation (Blue Apron), health and beauty products (Dollar Shave Club), and a large array of subscription-based software-as-a-service (SaaS) enterprises in the B2B space, as businesses look to increase the predictability of their revenue streams.

The increased popularity of subscription-based businesses has brought with it an increase in the public disclosure of data on (but not limited to) **customer churn**, **customer/subscriber acquisition costs**, **average revenue per user**, and **customer lifetime value** (CLV). The price of a company’s stock reflects and incorporates investors’ beliefs regarding the future cash flows the company will generate. For the subscription-based businesses, the primary source of future cash flows is customers. Therefore, customer data is important to investors and is being used by analysts as they make their recommendations. Analyst reports strongly emphasize customer data in general (and the size of the total subscriber base over time in particular) when justifying their investment recommendations. 

My objective in this notebook is to implement the framework (and its models) presented in the 2016 paper [Valuing Subscription-Based Businesses Using Publicly Disclosed Customer Data](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2701093). At the heart of this framework are the models of the firm’s **acquisition** and **retention processes** that accommodate factors such as *customer heterogeneity*, *duration dependence*, *seasonality*, and *changes in population size*. We will will estimating the parameters of the underlying model of customer behavior using only publicly disclosed customer data. We explicitly account for the fact that publicly reported data are typically *aggregated* (temporally and across customers) and suffer from *missingness* (i.e., the reported data are not available for all periods).

I start off this notebook by discussing the principles of customer-based corporate valuation, first presenting the basic concepts of firm valuation and then highlighting the nature of the customer data typically released by subscription-based businesses. I will then present the model of customer behavior for such settings, presenting models for customer *acquisition*, *retention*, and *spend*. We then fit this model to two real public companies (Dish Network, Ticker: DISH and Sirius XM, Ticker: SIRI) with publicly available economic data. After demonstrating the validity of the proposed model, I will run valuations of the firms, and explore other insights that can be derived using the model.

## The Logic of Customer-Based Corporate Valuation

### Valuation 101

The framework summarized here is a discounted cash flow (DCF) model, which is the de-facto industry standard way in which operating assets are valued within the financial community. At the heart of any such valuation exercise is the estimation of period-by-period FCF, central to which are estimates of period-by-period revenue.

Shareholder value at time $T$:

$$
\text{SHV}_T = \text{OA} + \text{NOA}_T - \text{ND}_T
$$

The value of a firm’s operating assets ($\text{OA}$) is equal to the sum of all *expected* future free cash flows (FCFs) the firm will generate, discounted at the weighted average cost of capital ($\text{WACC}$):

$$
\text{OA}_T = \sum_{t=0}^{\infty} \frac{\text{FCF}_{T+t}}{(1+\text{WACC})^{t}}
$$


FCF is equal to the net operating profit after taxes ($\text{NOPAT}$) minus the difference between capital expenditures ($\text{CAPEX}$) and depreciation and amortization ($\text{D\&A}$), minus the change in non-financial working capital ($\Delta\text{NFWC}$):

$$
\text{FCF}_t = \text{NOPAT}_t - (\text{CAPEX}_t - \text{D\&A}_t) - \Delta\text{NFWC}_t
$$

The most important ingredient of FCF is $\text{NOPAT}$, which is a measure of the underlying profitability of the operating assets of the firm. $\text{NOPAT}$ is equal to revenues ($\text{REV}$) times the contribution margin ratio ($1 - \text{VC}$) minus fixed operating costs ($\text{FC}$), after taxes (where $\text{TR}$ is the corporate tax rate for the firm):

$$
\text{NOPAT}_t = \left(\text{REV}_t \times (1 - \text{VC}) - \text{FC}_t \right) \times \left(1- \text{TR}_t\right)
$$

### A Data Structure for Subscription-Based Businesses

```{python}
import pandas as pd
import matplotlib.pyplot as plt

%config InlineBackend.figure_formats = ['svg']
```

-  [US Census Bureau’s Housing Vacancies and Homeownership CPS/HVS](https://www.census.gov/housing/hvs/data/histtabs.html) 
-  [Quarterly Estimates of the Housing Inventory](https://www.census.gov/housing/hvs/data/histtab8.xlsx):

Alternative Source: FRED (EOCCUSQ176N) Housing Inventory Estimate: Occupied Housing Units in the United States

-   **Units**: Thousands of Units, Not Seasonally Adjusted
-   **Frequency**: Quarterly
-   **Notes**: A housing unit is occupied if a person or group of persons is living in it at the time of the interview or if the occupants are only temporarily absent, as for example, on vacation. The persons living in the unit must consider it their usual place of residence or have no usual place of residence elsewhere. The count of occupied housing units is the same as the count of households.

```{python}
file_path = "data/quarterly-estimates-housing-inventory-US.csv"
household_full = pd.read_csv(file_path)
household_full
```

```{python}
file_path = "data/revised-quarterly-estimates-housing-inventory-US.csv"
household_revised = pd.read_csv(file_path)
household_revised
```

```{python}
household_full_lf = (
    pd.wide_to_long(household_full, stubnames="Q", i="Year", j="Quarter")
    .sort_index()
    .rename(columns={"Q": "Total Household"})
)
household_rev_lf = (
    pd.wide_to_long(household_revised, stubnames="Q", i="Year", j="Quarter")
    .sort_index()
    .rename(columns={"Q": "Total Household"})
)
household_rev_lf.plot(figsize=(9, 4), linewidth=0.75, color="k");
```

```{python}
dish_op_res = pd.read_csv(
    'data/DISH - ADD-LOSS-END.csv', 
    index_col='Date', 
    parse_dates=True,
    dayfirst=True
).sort_index()
dish_op_res.tail()
```

- [U.S. Recession Bars](https://fredhelp.stlouisfed.org/fred/data/understanding-the-data/recession-bars/)
- [Business Cycle Dating](https://www.nber.org/research/business-cycle-dating)

```{python}
# Gross Customer Acquisition Every Quarter
dish_ADD = dish_op_res['Combined Additions'] * 1000
# Surviving Customers at the End of Quarter
dish_END = dish_op_res['Pay-TV Subscribers'] * 1000
# Customer Churn Every Quarter
dish_LOSS = (
    dish_op_res["Pay-TV Subscribers"].shift(periods=1)
    + dish_op_res["Combined Additions"]
    - dish_op_res["Pay-TV Subscribers"]
) * 1000
```

```{python}
def dish_plot_format(ax, data):
    # Recession bar
    ax.axvspan(pd.to_datetime("12/1/2007"), pd.to_datetime("06/1/2009"), color='gray', alpha=0.3)
    # Padding
    pad = pd.DateOffset(months=12)
    ax.set_xlim(data.index.min() - pad, data.index.max() + pad)
    # x-ticks
    ax.set_xticks(data.index[::8])
    ax.set_xticklabels([f"Q{((d.month-1)//3)+1} {d.year}" for d in data.index[::8]], rotation=45)
    plt.tight_layout()
    plt.show()
    return
```

```{python}
# Gross Customer Acquisition Every Quarter
_, ax = plt.subplots(figsize=(9, 4))
dish_ADD.plot(ax=ax, color='k', linewidth=0.75, title='ADD', ylim=(-70, 1200))
dish_plot_format(ax, dish_ADD)
```

```{python}
# Customer Churn Every Quarter
_, ax = plt.subplots(figsize=(9, 4))
dish_LOSS.plot(ax=ax, color="k", linewidth=0.75, title="LOSS", ylim=(-70, 1000))
dish_plot_format(ax, dish_LOSS)
```

```{python}
# Surviving Customers at the End of Quarter
_, ax = plt.subplots(figsize=(9, 4))
dish_END.plot(ax=ax, color='k', linewidth=0.75, title='END', ylim=(-800,16000))
dish_plot_format(ax, dish_END)
```

Number of vehicles on the road data: 

-  [Highway Statistics - State motor-vehicle registrations - MV-1](https://www.fhwa.dot.gov/policyinformation/statistics.cfm)
-  [Automobile Profile - Bureau of Transportation Statistics](https://www.bts.gov/content/automobile-profile)

Data description:
-   **Units**: Number of Units
-   **Frequency**: Annually
-   **Notes**: Total number of registered private, commercial (incl. taxicabs), and public automobiles in the US every year (excluding buses, trucks, and motorcycles)

```{python}
reg_cars = pd.read_csv('data/us_registered_vehicles.csv', index_col='Year')
reg_cars.tail()
```

```{python}
reg_cars.plot(y='Registered Automobiles', figsize=(9, 4), color='k', linewidth=0.75);
```

Vehicle sales data (for macroeconomic covariate):

- [Light vehicle and total vehicle sales - Bureau of Economic Analysis/Wards Intelligence](https://www.bea.gov/data/consumer-spending/main)
- [Retail New Passenger Car Sales](https://www.bts.gov/content/retaila-new-passenger-car-sales-thousands-units)
- [Monthly Transportation Statistics](https://data.bts.gov/Research-and-Statistics/Monthly-Transportation-Statistics/crem-w557/about_data)

Data description:
-  Autos--all passenger cars, including station wagons.
-  Light trucks--trucks up to 14,000 pounds gross vehicle weight, including minivans and
-  Sport utility vehicles.  Prior to the 2003 Benchmark Revision light trucks were up to 10,000 pounds.
-  Heavy trucks--trucks more than 14,000 pounds gross vehicle weight.
-  **Columns**:
    -  Autos  -- not seasonally adjusted (Thousands)	
    -  Light Trucks  -- not seasonally adjusted (Thousands) 	
    -  Light Total  --not seasonally adjusted (Thousands)	
    -  Total  -- not seasonally adjusted (Thousands)	
    -  Autos (SAAR) -- seasonally adjusted at annual rates (Millions)	
    -  Light Trucks (SAAR) -- seasonally adjusted at annual rates (Millions)	
    -  Light Total (SAAR) -- seasonally adjusted at annual rates (Millions)	
    -  Total (SAAR) -- seasonally adjusted at annual rates (Millions)

```{python}
new_vehicle_sales = pd.read_csv(
    'data/us_new_passenger_car_sales.csv',
    index_col='Date',
    parse_dates=True,
    dayfirst=True)
new_vehicle_sales.tail()
```

```{python}
new_vehicle_sales.plot(y='Light Total', figsize=(9, 4), color='k', linewidth=0.75);
```

```{python}
new_vehicle_sales.plot(y='Light Total (SAAR)', figsize=(9, 4), color='k', linewidth=0.75);
```

